import java.util.Scanner;

abstract class Teacher{
    private String name;
    private double baseSalary;

    public Teacher(String name, double baseSalary) {
        this.name = name;
        this.baseSalary = baseSalary;
    }

    public Teacher(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public double getBaseSalary() {
        return baseSalary;
    }
    abstract public void getInfor();
    abstract public double calculateSalary();
}
class PermanentLecturer extends Teacher{
    private double researchAllowance;

    public PermanentLecturer(String name, double baseSalary, double researchAllowance) {
        super(name, baseSalary);
        this.researchAllowance = researchAllowance;
    }


    @Override
    public double calculateSalary() {
        return getBaseSalary() + researchAllowance;
    }

    @Override
    public void getInfor() {
        System.out.println("Loại giảng viên: Permanent");
        System.out.println("Họ tên: " + getName());
        System.out.println(String.format("Lương thực nhận: %.1f", calculateSalary()));
    }
}
class VisitingLecturer extends Teacher{
    private int teachingHours;
    private double paymentPerHour;

    public VisitingLecturer(String name, int teachingHours, double paymentPerHour) {
        super(name);
        this.teachingHours = teachingHours;
        this.paymentPerHour = paymentPerHour;
    }
    @Override
    public double calculateSalary() {
        return paymentPerHour*teachingHours;
    }

    @Override
    public void getInfor() {
        System.out.println("Loại giảng viên: Visiting");
        System.out.println("Họ tên: "+getName());
        System.out.println(String.format("Lương thực nhận: %.1f", calculateSalary()));
    }
}
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("--- Thông tin giảng viên ---");
        String type1=sc.nextLine();
        if(type1.equals("PermanentLecturer")){
            PermanentLecturer a = new PermanentLecturer(sc.nextLine(), sc.nextDouble(),sc.nextDouble());
            a.getInfor();
        }
        else if(type1.equals("VisitingLecturer")){
            VisitingLecturer b = new VisitingLecturer(sc.nextLine(), sc.nextInt(), sc.nextDouble());
            b.getInfor();
        }
        sc.nextLine();
        String type2 = sc.nextLine();
        if(type2.equals("PermanentLecturer")){
            PermanentLecturer c = new PermanentLecturer(sc.nextLine(), sc.nextDouble(), sc.nextDouble());
            c.getInfor();
        }
        else if(type2.equals("VisitingLecturer")){
            VisitingLecturer d = new VisitingLecturer(sc.nextLine(), sc.nextInt(), sc.nextDouble());
            d.getInfor();
        }
    }
}
